
input {
  kafka {
    bootstrap_servers => "kafka:9092"  
    topics => ["ecommerce_new_excel.ecommerce_new_excel.skus"]
    codec => json {
      target => "data"
    }
    decorate_events => true
  }
}

filter {
  # if [message] == "" {
  #   drop { }
  # }
  if [data][payload][op] == "c" or [data][payload][op] == "r" or [data][payload][op] == "u" {
    ruby {
      code => "
        after = event.get('[data][payload][after]')
        if after 
          if after['default']  == 0 
            after['default'] = false
          else 
            after['default']  = true
          end
          event.set('sku', after)
        end
      "
    }
    mutate {
      add_field => { 
        "[@metadata][id]" => "%{[data][payload][after][product_id]}"
      }
    }
    mutate {
      add_field => { 
        "[@metadata][script]" => "
            if (ctx._source == null) {
              ctx._source = [:]
            }
            if (ctx._source.skus == null) {
              ctx._source.skus = new ArrayList();
            } 
            else {
              for (int i = 0; i < ctx._source.skus.size(); i++) {
                if (ctx._source.skus[i].id == params.event.get('sku').id) {
                  ctx._source.skus[i] = params.event.get('sku');
                  return ;
                }
              }
            }
            ctx._source.skus.add(params.event.get('sku'));
          "
      }
    }
  }
  else{
    ruby {
      code => "
        sku_id = event.get('[data][payload][before][id]')
        if sku_id
          event.set('sku_id', sku_id)
        end
      "
    }
    mutate {
      add_field => { 
        "[@metadata][id]" => "%{[data][payload][before][product_id]}"
        "[@metadata][script]" => "
              for (int i = 0; i < ctx._source.skus.size(); i++) {
                if (ctx._source.skus[i].id == params.event.get('sku_id')) {
                  ctx._source.skus.remove(i);
                  return;
                }
              }
            "
      }
    }
  }
  mutate {
      remove_field => ["data","@version","@timestamp","event"]
    }
}

output {
  stdout {
    codec => json_lines
  }
    elasticsearch {
      hosts => ["elasticsearch:9200"] 
      index => "products"
      document_id => "%{[@metadata][id]}"
      # action => "%{[@metadata][action]}"
      action => "update"
      script_lang => "painless"
      script_type => "inline"
      script => "%{[@metadata][script]}"


      # script_lang => ""
      # script_type => "indexed"
    }
}
